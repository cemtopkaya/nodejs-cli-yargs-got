#interworking'ler ortamlar hazırlanırken NF'lerden önce kurulduğu ve postinst script'i guncellenmediği için, deb paketinin editlenip tekrar 
#oluşturulup install edildiği durumda bu dockerfile kullanılır
# ARG_CINAR_ENV = dev | prod | deb
ARG ARG_CINAR_ENV
ARG ARG_NF_PAKET_ADI 

FROM ubuntu:xenial AS cinar-ortak
USER root
WORKDIR /root

RUN echo "deb [trusted=yes] http://192.168.13.47/debs/ amd64/" >> /etc/apt/sources.list; apt update;

RUN apt install -y  certificate \
                    cinarloggersink \
                    cpp-jwt \
                    dkms \
                    dpdk \
                    libevent \
                    libicu55 \
                    libnghttp2-asio \
                    libprometheuscpp \
                    mongo-c-driver \
                    mongo-cxx-driver \
                    nlohmann-json \
                    python \
                    nano \
                    curl \
                    wget \
                    net-tools \
                    netcat \
                    iputils-ping \
                    g3log \
                    libpq5 \
                    sudo \
                    libreadline-dev \
                    # libxerces-c-dev paketi smf-upf-amf ekibi dev prod debug ortamlarında kullanıyor.control dependecy eklenmeli.
                    libxerces-c-dev \ 
                    #lix2x3asnpackage  paketi smf-amf ekibi prod-debug dev ortamlarında kullanıyor.control dependecy eklenmeli.
                    lix2x3asnpackage \
                    nettle-dev 
FROM cinar-ortak AS cinar-prod
RUN apt install -y  boost-all \
                    libncurses5 \
                    libsasl2-dev \
                    libssl-dev \
                    libxml2 \
                    uuid 
FROM cinar-prod AS cinar-deb
RUN apt update && \
    apt install -y  gdb \
                    gdbserver 
FROM cinar-ortak AS cinar-dev
RUN apt install -y  zip \
                    unzip \
                    g++ \
                    make \
                    checkinstall \
                    gdb \
                    gdbserver \
                    default-jre \
                    doxygen \
                    gcovr \
                    cppcheck \
                    graphviz \
                    libpqxx-dev \
                    libsctp-dev \
                    libncurses5-dev \
                    libxml2-dev \
                    uuid-dev \
                    librabbitmq-dev \
                    rabbitmq-server \
                    libgnutls-dev \
                    libgcrypt-dev \
                    libidn11-dev \
                    libsctp-dev \
                    boost-all-dev \
                    cinarcodegenerator  \
                    cpp-jwt \
                    googletest


FROM cinar-${ARG_CINAR_ENV} AS nf-cnrnrf
ARG ARG_NF_PAKET_ADI

RUN apt install -y `UZANTI=$(case ${ARG_CINAR_ENV} in prod) echo "";; *) echo ".dbg";; esac) ; echo " \
     cinarnnrfaccesstoken.15.201906-Interworking$UZANTI \
     cinarnnrfnfdiscovery.15.201906-Interworking$UZANTI \
     cinarnnrfnfmanagement.15.201906-Interworking$UZANTI"` && \
     echo "/opt/cinar/lib" > /etc/ld.so.conf.d/cinar.conf && /sbin/ldconfig 

FROM cinar-${ARG_CINAR_ENV} AS nf-cnrnssf
ARG ARG_NF_PAKET_ADI

RUN  apt install -y `UZANTI=$(case ${ARG_CINAR_ENV} in prod) echo "";; *) echo ".dbg";; esac) ; echo " \
     cinarnnrfaccesstoken.15.201906-Interworking$UZANTI \
     cinarnnssfnssaiavailability.15.201906-Interworking$UZANTI \
     cinarnnssfnsselection.15.201906-Interworking$UZANTI \
     cinarnnrfnfdiscovery.15.201906-Interworking$UZANTI \
     cinarnnrfnfmanagement.15.201906-Interworking$UZANTI"` && \
     echo "/opt/cinar/lib" > /etc/ld.so.conf.d/cinar.conf && /sbin/ldconfig

FROM cinar-${ARG_CINAR_ENV} AS nf-cnrnef
ARG ARG_NF_PAKET_ADI
RUN apt install -y `UZANTI=$(case ${ARG_CINAR_ENV} in prod) echo "";; *) echo ".dbg";; esac) ; echo " \
    cinarnnefnorthboundassessionwithqos.15.201906-interworking$UZANTI \
    cinarnnefnorthboundcpprovisioning.15.201906-interworking$UZANTI \
    cinarnnefnorthbounddevicetriggering.15.201906-interworking$UZANTI \
    cinarnnefnorthboundmonitoringevent.15.201906-interworking$UZANTI \
    cinarnnefnorthboundpfdmanagement.15.201906-interworking$UZANTI \
    cinarnnefnorthboundtrafficinfluence.15.201906-interworking$UZANTI \
    cinarnnefpfdmanagement.15.201906-interworking$UZANTI \
    cinarafprofilemanagement.15.201906-interworking$UZANTI \
    cinarnnrfaccesstoken.15.201906-interworking$UZANTI \
    cinarnnrfnfdiscovery.15.201906-interworking$UZANTI \
    cinarnnrfnfmanagement.15.201906-interworking$UZANTI \
    cinarnpcfpolicyauthorization.15.201906-interworking$UZANTI \
    cinarresourcemanagementofbdt.15.201906-interworking$UZANTI \
    cinarnpcfbdtpolicycontrol.15.201906-interworking$UZANTI \
    cinarnudrdatarepository.15.201906-interworking$UZANTI \
    cinarnudmsdm.15.201906-interworking$UZANTI \
    cinarnudmee.15.201906-interworking$UZANTI \
    cinarnudmuecm.15.201906-interworking$UZANTI \
    cinarnamfeventexposure.15.201906-interworking$UZANTI \
    cinarnsmfeventexposure.15.201906-interworking$UZANTI"` && \
    echo "/opt/cinar/lib" > /etc/ld.so.conf.d/cinar.conf && /sbin/ldconfig

FROM cinar-${ARG_CINAR_ENV} AS nf-cnrausf
ARG ARG_NF_PAKET_ADI
RUN apt install -y cinarasn1clib=1.0.4

FROM cinar-${ARG_CINAR_ENV} AS nf-cnrudm
ARG ARG_NF_PAKET_ADI
RUN apt install -y cinarasn1clib=1.0.4

FROM cinar-${ARG_CINAR_ENV} AS nf-cnrudr
ARG ARG_NF_PAKET_ADI
RUN apt install -y cinarasn1clib=1.0.4


FROM cinar-${ARG_CINAR_ENV} AS nf-cnrsmf
ARG ARG_NF_PAKET_ADI

RUN apt install -y `UZANTI=$(case ${ARG_CINAR_ENV} in prod) echo "";; *) echo ".dbg";; esac) ; echo " \
     cinarnnrfaccesstoken.15.201906-Interworking$UZANTI \
     cinarnnrfnfdiscovery.15.201906-Interworking$UZANTI \
     cinarnnrfnfmanagement.15.201906-Interworking$UZANTI \
     cinarnamfeventexposure.15.201906-Interworking$UZANTI \
     cinarnudmsdm.15.201906-Interworking$UZANTI \
     cinarnudmee.15.201906-Interworking$UZANTI \
     cinarnudmuecm.15.201906-Interworking$UZANTI \
     cinarnsmfpdusession.15.201906-Interworking$UZANTI \
     cinarnamfcommunication.15.201906-Interworking$UZANTI \
     cinarnsmfeventexposure.15.201906-Interworking$UZANTI \
     cinarnpcfsmpolicycontrol.15.201906-Interworking$UZANTI \
     cinarnnefpfdmanagement.15.201906-Interworking$UZANTI \
     cinarnchfconvergedcharging.15.201906-Interworking$UZANTI"` \
     lix1package \
     cinarasn1clib=1.0.4 \
     libxerces-c-dev  \
     lix2x3asnpackage \
     xsd && \
     echo "/opt/cinar/lib" > /etc/ld.so.conf.d/cinar.conf && /sbin/ldconfig
        
FROM cinar-${ARG_CINAR_ENV} AS nf-cnramf
ARG ARG_NF_PAKET_ADI
RUN apt install -y `UZANTI=$(case ${ARG_CINAR_ENV} in prod) echo "";; *) echo ".dbg";; esac) ; echo " \              
        cinarnnrfnfmanagement.15.201906-interworking$UZANTI \
        cinarnnrfnfdiscovery.15.201906-interworking$UZANTI \
        cinarnamfcommunication.15.201906-interworking$UZANTI \
        cinarnsmfeventexposure.15.201906-interworking$UZANTI \
        cinarnnrfaccesstoken.15.201906-interworking$UZANTI \
        cinarnudmsdm.15.201906-interworking$UZANTI \
        cinarnudmuecm.15.201906-interworking$UZANTI \
        cinarnpcfampolicycontrol.15.201906-interworking$UZANTI \
        cinarnsmfpdusession.15.201906-interworking$UZANTI \
        cinarnausfueauthentication.15.201906-interworking$UZANTI \
        cinarnnssfnsselection.15.201906-interworking$UZANTI \
        cinarnnssfnssaiavailability.15.201906-interworking$UZANTI \
        cinarnamfeventexposure.15.201906-interworking$UZANTI \
        cinarnsmsfsmservice.15.201906-interworking$UZANTI \
        cinarnamfmt.15.201906-interworking$UZANTI \
        cinarnamflocation.15.201906-interworking$UZANTI"` \
        cinarasn1clib \
        cinarcryptolib \
        lix1package \
        libxerces-c-dev  \
        lix2x3asnpackage \
        xsd && \
      echo "/opt/cinar/lib" > /etc/ld.so.conf.d/cinar.conf && /sbin/ldconfig

FROM cinar-${ARG_CINAR_ENV} AS nf-cnrupf
ARG ARG_NF_PAKET_ADI
RUN  apt install -y xsd \
                    libxerces-c-dev

FROM cinar-${ARG_CINAR_ENV} AS nf-cnrpcfsms
ARG ARG_NF_PAKET_ADI
RUN apt install -y `UZANTI=$(case ${ARG_CINAR_ENV} in prod) echo "";; *) echo ".dbg";; esac) ; echo " \
    cinarnpcfampolicycontrol.15.201906-interworking$UZANTI\
        cinarnpcfbdtpolicycontrol.15.201906-interworking$UZANTI \
        cinarnpcfeventexposure.15.201906-interworking$UZANTI \
        cinarnpcfpolicyauthorization.15.201906-interworking$UZANTI \
        cinarnpcfsmpolicycontrol.15.201906-interworking$UZANTI \
        cinarnpcfuepolicycontrol.15.201906-interworking$UZANTI \
        cinarnnrfaccesstoken.15.201906-interworking$UZANTI \
        cinarnnrfnfdiscovery.15.201906-interworking$UZANTI \
        cinarnnrfnfmanagement.15.201906-interworking$UZANTI \
        cinarnudrdatarepository.15.201906-interworking$UZANTI \
        cinarnchfspendinglimitcontrol.15.201906-interworking$UZANTI"` \
        libcnrpcfcommon \
        freediameter-cinar-common  \
        freediameter-cinar-dev && \
    echo "/opt/cinar/lib" > /etc/ld.so.conf.d/cinar.conf && /sbin/ldconfig 

FROM nf-cnrpcfsms AS nf-cnrpcfams
RUN echo "pcf ams stage"

FROM nf-cnrpcfsms AS nf-cnrpcfcs
RUN echo "pcf cs stage"

FROM nf-cnrpcfsms AS nf-cnrpcfnfrs
RUN echo "pcf nfrs stage"

FROM nf-cnrpcfsms AS nf-cnrpcfoms
RUN echo "pcf oms stage"

FROM nf-cnrpcfsms AS nf-cnrpcfpes
RUN echo "pcf oms stage"

    
# #--------------------------------------------------------------

FROM nf-${ARG_NF_PAKET_ADI} AS nfinstall

RUN echo "nf install aşamasındayım"
ARG ARG_CINAR_ENV
ARG ARG_NF_PAKET_ADI
ENV NF_PAKET_ACILACAK_DIZIN=paket
ENV NF_PAKET_KOPYALANACAK_DIZIN=/root

USER root
WORKDIR /root
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN if [ "${ARG_CINAR_ENV}" == "dev" ] ; then \
  echo "development enviroment" ; \
  else \
    if [  "${ARG_CINAR_ENV}" == "prod" ]; then \
        apt show $ARG_NF_PAKET_ADI ; \
        apt download $ARG_NF_PAKET_ADI ; \
        apt-cache show ${ARG_NF_PAKET_ADI} | grep Filename | cut -d' ' -f2 | head -1 > nf_paket_filename.txt ; \
    elif [  "${ARG_CINAR_ENV}" == "deb" ]; then \
        apt show $ARG_NF_PAKET_ADI ; \
        VERSION=`apt-cache show ${ARG_NF_PAKET_ADI} | grep Version | cut -d' ' -f2 |  grep debug | head -1` ; \
        apt download $ARG_NF_PAKET_ADI=$VERSION ; \
        apt-cache show ${ARG_NF_PAKET_ADI} | grep Filename | cut -d' ' -f2 |  grep debug | head -1 > nf_paket_filename.txt ; \
    fi \
  fi

RUN if [ "${ARG_CINAR_ENV}" == "dev" ] ; then \
  echo "development enviroment"; \
  else \
    dpkg-deb -R $(cat nf_paket_filename.txt) $NF_PAKET_ACILACAK_DIZIN ;  \
    cd $NF_PAKET_ACILACAK_DIZIN/DEBIAN ;  \
    `awk '{gsub("^ *(sudo +systemctl|systemctl) *(daemon-reload|start|stop).*", "if [ ! -n $container ]; then "$0"; fi")}1' ./postinst > postinst.yeni` ; \
    chmod 755 postinst.yeni && mv postinst.yeni postinst ; \
    cd ../.. ; \
    dpkg-deb -b $NF_PAKET_ACILACAK_DIZIN $(cat nf_paket_filename.txt) ;  \
    cd $NF_PAKET_KOPYALANACAK_DIZIN && dpkg -i $(cat nf_paket_filename.txt) ;  \
    rm $(cat nf_paket_filename.txt) && rm -r $NF_PAKET_KOPYALANACAK_DIZIN ; \
  fi

RUN if [ ! -f "/root/.bashrc" ]; then /bin/cp /etc/skel/.bashrc ~/; fi
ENTRYPOINT ["/sbin/init"]
